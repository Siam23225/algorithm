#include <iostream>
#include <vector>

using namespace std;

class Graph {
private:
    int numVertices;
    int numEdges;
    vector<vector<int>> incidenceMatrix;

public:
    Graph(int vertices, int edges) {
        numVertices = vertices;
        numEdges = edges;

        incidenceMatrix.resize(numVertices, vector<int>(numEdges, 0));
    }

    void addEdge(int vertex, int edge) {
        incidenceMatrix[vertex][edge] = 1;
    }

    void printIncidenceMatrix() {
        for (int i = 0; i < numVertices; i++) {
            for (int j = 0; j < numEdges; j++) {
                cout << incidenceMatrix[i][j] << " ";
            }
            cout << endl;
        }
    }
};

int main() {
    int vertices, edges;
    cout << "Enter the number of vertices: ";
    cin >> vertices;
    cout << "Enter the number of edges: ";
    cin >> edges;

    Graph graph(vertices, edges);

    cout << "Enter the edges (vertex, edge):" << endl;
    for (int i = 0; i < edges; i++) {
        int vertex, edge;
        cin >> vertex >> edge;
        graph.addEdge(vertex, edge);
    }

    cout << "Incidence Matrix:" << endl;
    graph.printIncidenceMatrix();

    return 0;
}
