#include <iostream>

using namespace std;

bool isSafe(int brd[][100], int rw, int cl, int n)
{
	for(int i = 0; i < rw; i++)
	{
		if(brd[i][cl] == 1)
			return false;
	}
	
	for(int i = rw, j = cl; i >= 0 and j >= 0; i--, j--)
	{
		if(brd[i][j] == 1)
			return false;
	}
	
	for(int i = rw, j = cl; i >= 0 and j <= n; i--, j++)
	{
		if(brd[i][j] == 1)
			return false;
	}
	
	return true;
}

bool nQueens(int brd[][100], int rw, int n)
{
	if(rw == n)
	{
		for(int i = 0; i < n; i++)
		{
			for(int j = 0; j < n; j++)
			{
				cout << brd[i][j] << ' ';
			}
			cout << endl;
		}
		cout << endl;
		return true;
	}
	
	for(int cl = 0; cl < n; cl++)
	{
		if(isSafe(brd, rw, cl, n))
		{
			brd[rw][cl] = 1;
			
			if(nQueens(brd, rw + 1, n))
			{
				return true;
			}
			
			brd[rw][cl] = 0;
		}
	}
	
	return false;
}

int main()
{
	int n; cin >> n;
	
	int brd[100][100] = {0};
	
	if(!nQueens(brd, 0, n))
	{
		cout << "No solution" << endl;
	}
	
	return 0;
}
