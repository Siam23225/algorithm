#include <bits/stdc++.h>

using namespace std;

void findMinRoute(vector<vector<int>> tsp)
{
    int sum = 0;
    int cnt = 0;
    int i = 0, j = 0;
    int min = INT_MAX; 
    map<int, int> visited;

    visited[0] = 1;
    int route[tsp.size()];

    while (cnt < tsp.size() - 1) 
    {
        if (j != i && visited[j] == 0)
        {
            if (tsp[i][j] < min)
            {
                min = tsp[i][j];
                route[cnt] = j; 
            }
        }

        j++;

        if (j == tsp[i].size())
        {
            sum += min;
            min = INT_MAX;
            visited[route[cnt]] = 1; 
            j = 0;
            i = route[cnt];
            cnt++;
        }
    }

    i = route[cnt - 1];

    for (int j = 0; j < tsp.size(); j++)
    {
        if (i != j && tsp[i][j] < min)
        {
            min = tsp[i][j];
            route[cnt] = j;
        }
    }

    sum += min;

    cout << "Minimum cost is: " << sum << endl;
}

int main()
{
    int n;
    cin >> n;
    vector<vector<int>> tsp(n, vector<int>(n));

    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < n; j++)
        {
            int x;
            cin >> x;
            tsp[i][j] = x;
        }
    }

    findMinRoute(tsp);

    return 0;
}
